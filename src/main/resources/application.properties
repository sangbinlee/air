spring.application.name=air





################################## 3 oracle
#java.sql.SQLException: ORA-01017: invalid username/password; logon denied
oracle.datasource.username=user1234
oracle.datasource.password=user1234
oracle.datasource.jdbcUrl=jdbc:oracle:thin:@//localhost:1521/xe
#oracle.datasource.username=system
#oracle.datasource.password=secret
#oracle.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
oracle.datasource.driver-class-name=oracle.jdbc.OracleDriver

################################## 4 postgresql
postgresql.datasource.jdbcUrl=jdbc:postgresql://localhost:5432/mydatabase
postgresql.datasource.username=myuser
postgresql.datasource.password=secret
postgresql.datasource.driver-class-name=org.postgresql.Driver

################################## 5 sqlserver
#com.microsoft.sqlserver.jdbc.SQLServerException: "encrypt" 속성이 "true"(으)로 설정되고 "trustServerCertificate" 속성이 "false"(으)로 설정되었지만
#드라이버가 SSL(Secure Sockets Layer) 암호화를 사용하여 SQL Server에 대한 보안 연결을 설정할 수 없습니다.
#오류: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException:
#unable to find valid certification path to requested target. ClientConnectionId:2705791c-d73f-431a-842b-412b1692595d

sqlserver.datasource.jdbcUrl=jdbc:sqlserver://localhost:1433;databaseName=master;encrypt=true;trustServerCertificate=true
sqlserver.datasource.username=sa
sqlserver.datasource.password=verYs3cret
sqlserver.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver


################################## 1 mariadb
mariadb.datasource.jdbcUrl=jdbc:mariadb://localhost:3306/mydatabase
mariadb.datasource.username=myuser
mariadb.datasource.password=secret
mariadb.datasource.driver-class-name=org.mariadb.jdbc.Driver

################################## 2 mysql
#Public Key Retrieval is not allowed
#?useSSL=false&allowPublicKeyRetrieval=true
#spring.second-datasource.url=jdbc:mysql://localhost:13306/mydatabase?autoReconnect=true&useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
mysql.datasource.jdbcUrl=jdbc:mysql://localhost:13306/mydatabase?useSSL=false&allowPublicKeyRetrieval=true
mysql.datasource.username=root
mysql.datasource.password=verysecret
mysql.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



################################## jpa
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQLDialect
#spring.jpa.database=oracle
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.generate-ddl=false #default
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.data-locations=classpath*:data.sql







logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.hibernate.type=trace
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true




#management.server.port=9090
#springdoc.use-management-port=true
# This property enables the openapi and swagger-ui endpoints to be exposed beneath the actuator base path.
#management.endpoints.web.exposure.include=openapi, swagger-ui


# http://localhost:8080/swagger-ui/index.html
#springdoc.swagger-ui.path=/swagger-ui.html
springdoc.show-actuator=true


##################### error



#Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata
# (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect'
#when a custom Dialect implementation must be provided)





#Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty

#***************************
#APPLICATION FAILED TO START
#***************************
#
#Description:
#
#Configuration property name 'spring.secondDatasource' is not valid:
#
#    Invalid characters: 'D'
#    Bean: secondaryDataSource
#    Reason: Canonical names should be kebab-case ('-' separated), lowercase alpha-numeric characters and must start with a letter
#
#Action:
#
#Modify 'spring.secondDatasource' so that it conforms to the canonical names requirements.









#***************************
#APPLICATION FAILED TO START
#***************************
#
#Description:
#
#Parameter 1 of method dataSource in org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari required a single bean, but 5 were found:
#	- jdbcConnectionDetailsForAirMariadb1: defined in unknown location
#	- jdbcConnectionDetailsForAirMysql1: defined in unknown location
#	- jdbcConnectionDetailsForAirOracle1: defined in unknown location
#	- jdbcConnectionDetailsForAirPostgres1: defined in unknown location
#	- jdbcConnectionDetailsForAirSqlserver1: defined in unknown location
#
#This may be due to missing parameter name information
#
#Action:
#
#Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
#
#Ensure that your compiler is configured to use the '-parameters' flag.
#You may need to update both your build tool settings as well as your IDE.
#(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)